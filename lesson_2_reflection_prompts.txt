What happens when you initialize a repository? Why do you need to do it? 
it adds a .git folder that is hidden from user and is used to track changes in assigned files.


How is the staging area different from the working directory and the repository? What value do you think it offers?


It allows you to check what is about to be committed and make any changes it needed. 

How can you use the staging area to make sure you have one commit per logical 
change?


Because you can see what is about to be committed and can run git diff and git diff --staged to ensure changes are the ones you actually want to make. 

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?


Branches can be used for modifying a project perhaps for an experimental addition, or maybe a client needs something in particular added, etc. 

How do the diagrams help you visualize the branch structure?
Because it is a graphical representation of what is going on. 



What is the result of merging two branches together? Why do we represent it in
t he diagram the way we do?


The merging of two branches is almos like parents having a baby. The new branch can go back to either branch. 

What are the pros and cons of Git’s automatic merging vs. always doing merges
manually?

It is easier to do automaitc merging, but sometimes manual merging is needed to ensure the right changes are committed. 